{"version":3,"sources":["ProviderContext.js","Employees.js","birthEmployees.js","App.js","reportWebVitals.js","index.js"],"names":["ProviderContext","createContext","initUsersMap","Map","sortUsersByLastName","users","i","length","char","lastName","charAt","previousArray","get","push","sort","a","b","localeCompare","set","DataProviderContext","props","useState","usersByLastNameMap","setUsersByLastNameMap","usersByBirthdayMap","setUsersByBirthdayMap","usersClickedIdMap","setUsersClickedIdMap","useEffect","ignore","usersByIdMapStr","localStorage","getItem","usersByIdMap","JSON","parse","usersByBirthdayMapStr","axios","result","sortedUsersMap","data","fetchData","Provider","value","children","months","Employees","useContext","className","keys","map","user","firstName","type","checked","has","id","onChange","clickedIdsMap","birthdayMap","date","Date","dob","humanMonth","getMonth","delete","validMonthUsers","index","indexOf","splice","setItem","stringify","Array","from","entries","clickUser","Birthday","size","month","userID","getDay","getFullYear","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b51d270.chunk.js","sourcesContent":["import React, { useState, createContext, useEffect } from 'react';\nimport axios from 'axios';\n\nexport const ProviderContext = createContext();\n\nlet initUsersMap = new Map([\n    [\"A\", []],\n    [\"B\", []],\n    [\"C\", []],\n    [\"D\", []],\n    [\"E\", []],\n    [\"F\", []],\n    [\"G\", []],\n    [\"H\", []],\n    [\"I\", []],\n    [\"J\", []],\n    [\"K\", []],\n    [\"L\", []],\n    [\"M\", []],\n    [\"N\", []],\n    [\"O\", []],\n    [\"P\", []],\n    [\"Q\", []],\n    [\"R\", []],\n    [\"S\", []],\n    [\"T\", []],\n    [\"U\", []],\n    [\"V\", []],\n    [\"W\", []],\n    [\"X\", []],\n    [\"Y\", []],\n    [\"Z\", []],\n]);\n\nconst sortUsersByLastName = (users) => {\n    for (let i = 0; i < users.length; i++) {\n        let char = users[i].lastName.charAt(0);\n        let previousArray = initUsersMap.get(char);\n        previousArray.push(users[i]);\n        previousArray.sort((a, b) => a.lastName.localeCompare(b.lastName));\n        initUsersMap.set(char, previousArray);\n    }\n    return initUsersMap;\n}\n\nexport const DataProviderContext = props => {\n    const [usersByLastNameMap, setUsersByLastNameMap] = useState(new Map());\n    const [usersByBirthdayMap, setUsersByBirthdayMap] = useState(new Map());\n    const [usersClickedIdMap, setUsersClickedIdMap] = useState(new Map());\n\n    useEffect(() => {\n        let ignore = false;\n        //get data from localStorage\n        let usersByIdMapStr = localStorage.getItem(\"usersByIdMap\");\n        if (usersByIdMapStr) {\n            let usersByIdMap = new Map(JSON.parse(usersByIdMapStr));\n            setUsersClickedIdMap(usersByIdMap);\n        }\n        let usersByBirthdayMapStr = localStorage.getItem(\"usersByBirthdayMap\");\n        if (usersByBirthdayMapStr) {\n            let usersByBirthdayMap = new Map(JSON.parse(usersByBirthdayMapStr));\n            setUsersByBirthdayMap(usersByBirthdayMap);\n        }\n\n        const fetchData = async () => {\n            const result = await axios.get('https://yalantis-react-school-api.yalantis.com/api/task0/users');\n            if (!ignore) {\n                let sortedUsersMap = sortUsersByLastName(result.data);\n                setUsersByLastNameMap(sortedUsersMap);\n            }\n        }\n        fetchData();\n        return () => { ignore = true }\n    }, []);\n\n    return (\n        <ProviderContext.Provider value={{usersByLastNameMap, setUsersByLastNameMap, usersByBirthdayMap, setUsersByBirthdayMap, usersClickedIdMap, setUsersClickedIdMap}}>\n            {props.children}\n        </ProviderContext.Provider>\n    );\n};","import React, { useContext } from 'react';\nimport { ProviderContext } from './ProviderContext';\n\nconst months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\nconst Employees = () => {\n    const {\n        usersByLastNameMap, \n        usersClickedIdMap, \n        setUsersClickedIdMap, \n        usersByBirthdayMap, \n        setUsersByBirthdayMap,\n    } = useContext(ProviderContext);\n\n\n    const clickUser = (user) => {\n        let clickedIdsMap = new Map(usersClickedIdMap);\n        let birthdayMap = new Map(usersByBirthdayMap);\n\n        const date = new Date(user.dob);\n        const humanMonth = months[date.getMonth()];\n\n        if (clickedIdsMap.has(user.id)) {\n            clickedIdsMap.delete(user.id);\n            let validMonthUsers = birthdayMap.get(humanMonth);\n            const index = validMonthUsers.indexOf(user.id);\n            if (index > -1) {\n                validMonthUsers.splice(index, 1);\n            }\n\n            if (validMonthUsers.length > 0) {\n                birthdayMap.set(humanMonth, validMonthUsers);\n            } else {\n                birthdayMap.delete(humanMonth);\n            }\n        } else {\n            clickedIdsMap.set(user.id, user);\n            let validMonthUsers = birthdayMap.has(humanMonth) ? birthdayMap.get(humanMonth) : [];\n            birthdayMap.set(humanMonth, [...validMonthUsers, user.id]);\n        }\n\n        setUsersClickedIdMap(clickedIdsMap);\n        setUsersByBirthdayMap(birthdayMap);\n        localStorage.setItem(\"usersByIdMap\", JSON.stringify(Array.from(clickedIdsMap.entries())));\n        localStorage.setItem(\"usersByBirthdayMap\", JSON.stringify(Array.from(birthdayMap.entries())));\n    }\n\n    const renderEmployees = () => {\n        return [...usersByLastNameMap.keys()].map(char => {\n            return (<div className=\"part\" key={char}>\n                <div>{char}</div>\n                <div>\n                {usersByLastNameMap.get(char).length === 0 ? \"---\" : usersByLastNameMap.get(char).map(user => {\n                    return (\n                        <div className=\"name\" key={user.id}>\n                            {user.lastName} {user.firstName}\n                            <input type=\"checkbox\" checked={usersClickedIdMap.has(user.id)} onChange={() => clickUser(user)} />\n                        </div>\n                    )\n                })}\n                </div>\n            </div>)\n        })\n    }\n\n    return (\n        <div>\n            <h1 className=\"parent\">Employees</h1>\n            <div className=\"line\">\n                <div>{renderEmployees()}</div>\n            </div>\n        </div>\n    )\n}\nexport default Employees;","import React, { useContext } from 'react';\nimport { ProviderContext } from './ProviderContext';\n\nconst Birthday = () => {\n    const { usersByBirthdayMap, usersClickedIdMap } = useContext(ProviderContext);\n\n    const renderEmployeesBirthday = () => {\n        if (usersByBirthdayMap.size === 0) {\n            return (<p>No selected employees</p>)\n        }\n\n        return [...usersByBirthdayMap.keys()].map(month => {\n            return(\n                <div key={month}>\n                    <div>{month}</div>\n                    {usersByBirthdayMap.get(month).map(userID => {\n                        let user = usersClickedIdMap.get(userID)\n                        let date = new Date(user.dob);\n                        return(\n                            <div>{user.lastName} {user.firstName} - {date.getDay()+1} {month}, {date.getFullYear()} year</div>\n                        )\n                    })}\n                </div>\n            )\n        })\n    }\n\n    return (\n        <div>\n                <h1 className=\"position\">Employees birthday</h1>\n                <div className=\"line2\">\n            </div>\n            <div className=\"position\">\n                {renderEmployeesBirthday()}\n            </div>\n        </div>\n    )\n}\nexport default Birthday;","import './App.css';\nimport Employees from './Employees';\nimport Birthday from './birthEmployees';\nimport  {DataProviderContext}  from './ProviderContext';\n\nfunction App() {\n  return (\n    <DataProviderContext>\n      <div className=\"main\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-1-3\">\n              <Employees />\n            </div>\n            <div className=\"col-2-3\">\n              <Birthday />\n            </div>\n          </div>\n        </div>\n      </div>\n    </DataProviderContext>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}